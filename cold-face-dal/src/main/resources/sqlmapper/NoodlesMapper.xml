<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="dal.dao.NoodlesMapper">
  <resultMap id="BaseResultMap" type="dal.model.Noodles">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="noodles_name" jdbcType="VARCHAR" property="noodlesName" />
    <result column="type_code" jdbcType="VARCHAR" property="typeCode" />
    <result column="price" jdbcType="DECIMAL" property="price" />
  </resultMap>
  <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="dal.model.Noodles">
    <result column="remark" jdbcType="LONGVARCHAR" property="remark" />
  </resultMap>
  <sql id="Base_Column_List">
    id, noodles_name, type_code, price
  </sql>
  <sql id="Blob_Column_List">
    remark
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="ResultMapWithBLOBs">
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from noodles
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from noodles
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="dal.model.Noodles">
    insert into noodles (id, noodles_name, type_code, 
      price, remark)
    values (#{id,jdbcType=INTEGER}, #{noodlesName,jdbcType=VARCHAR}, #{typeCode,jdbcType=VARCHAR}, 
      #{price,jdbcType=DECIMAL}, #{remark,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="dal.model.Noodles">
    insert into noodles
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="noodlesName != null">
        noodles_name,
      </if>
      <if test="typeCode != null">
        type_code,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="remark != null">
        remark,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="noodlesName != null">
        #{noodlesName,jdbcType=VARCHAR},
      </if>
      <if test="typeCode != null">
        #{typeCode,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        #{price,jdbcType=DECIMAL},
      </if>
      <if test="remark != null">
        #{remark,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="dal.model.Noodles">
    update noodles
    <set>
      <if test="noodlesName != null">
        noodles_name = #{noodlesName,jdbcType=VARCHAR},
      </if>
      <if test="typeCode != null">
        type_code = #{typeCode,jdbcType=VARCHAR},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=DECIMAL},
      </if>
      <if test="remark != null">
        remark = #{remark,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="dal.model.Noodles">
    update noodles
    set noodles_name = #{noodlesName,jdbcType=VARCHAR},
      type_code = #{typeCode,jdbcType=VARCHAR},
      price = #{price,jdbcType=DECIMAL},
      remark = #{remark,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="dal.model.Noodles">
    update noodles
    set noodles_name = #{noodlesName,jdbcType=VARCHAR},
      type_code = #{typeCode,jdbcType=VARCHAR},
      price = #{price,jdbcType=DECIMAL}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>